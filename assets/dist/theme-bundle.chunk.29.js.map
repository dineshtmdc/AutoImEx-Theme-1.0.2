{"version":3,"file":"theme-bundle.chunk.29.js","mappings":"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","sources":["webpack://bigcommerce-cornerstone/./assets/js/theme/common/form-utils.js","webpack://bigcommerce-cornerstone/./assets/js/theme/common/models/forms.js","webpack://bigcommerce-cornerstone/./assets/js/theme/product/reviews.js","webpack://bigcommerce-cornerstone/./assets/js/theme/product/video-gallery.js","webpack://bigcommerce-cornerstone/./assets/js/theme/product.js"],"sourcesContent":["import _ from 'lodash';\nimport nod from './nod';\nimport forms from './models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setEmailValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a valid email.',\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: requirements.error,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: 'Your passwords do not match.',\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Max. price is required.',\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Min. price is required.',\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Input must be greater than 0.',\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n","const forms = {\n    email(value) {\n        const re = /^.+@.+\\..+/;\n        return re.test(value);\n    },\n\n    /**\n     * Validates a password field\n     * @param value\n     * @returns {boolean}\n     */\n    password(value) {\n        return this.notEmpty(value);\n    },\n\n    /**\n     * validates if a field is empty\n     * @param value\n     * @returns {boolean}\n     *\n     */\n    notEmpty(value) {\n        return value.length > 0;\n    },\n};\n\nexport default forms;\n","import $ from 'jquery';\nimport nod from '../common/nod';\nimport { CollapsibleEvents } from '../common/collapsible';\nimport forms from '../common/models/forms';\n\nexport default class {\n    constructor($reviewForm) {\n        this.validator = nod({\n            submit: $reviewForm.find('input[type=\"submit\"]'),\n        });\n\n        this.$reviewsContent = $('.productView-description');\n        this.$collapsible = $('[data-collapsible]', this.$reviewsContent);\n\n        this.$reviewsContent2 = $('.vertical-tabs #tab-reviews');\n\n        this.initLinkBind();\n        this.injectPaginationLink();\n        this.collapseReviews();\n    }\n\n    /**\n     * On initial page load, the user clicks on \"(12 Reviews)\" link\n     * The browser jumps to the review page and should expand the reviews section\n     */\n    initLinkBind() {\n        $(\".autoimex_reviewLink > a\" ).on('click',function( event ) {\n          event.preventDefault();\n        });\n        // Template Default Layout\n        $('.autoimex_reviewLink').on('click',() => {\n            if (($(window).width() >= 1025)) {\n                $('html, body').animate({\n                    scrollTop: this.$reviewsContent.offset().top - $('.header .autoimex_middleHeader').height(),\n                }, 700);\n            } else {\n                $('.productView-description #tab-reviews .toggleLink').addClass('is-open');\n                $('.productView-description #tab-reviews .toggle-content').addClass('is-open');\n                $('html, body').animate({\n                    scrollTop: this.$reviewsContent.offset().top - $('.header .autoimex_middleHeader').height(),\n                }, 700);\n            }\n            \n            var i = 2;\n            $( \".tab\" ).each(function( index ) {\n             \n              if( $( this ).text().search(\"Product Reviews\") != -1){\n                i = index + 1;\n              }\n            });\n\n            if (!$('.productView-description .tabs li:nth-child('+i+')').hasClass('is-active')) {\n                $('.productView-description .tabs li:nth-child('+i+') a').trigger('click');\n                $('.productView-description #tab-reviews .toggle-content').addClass('is-open');\n                $('.productView-description #tab-reviews .toggleLink').addClass('is-open');\n                $('.productView-description #tab-description .toggle-content').removeClass('is-open');\n                $('.productView-description #tab-description .toggleLink ').removeClass('is-open');\n\n            }\n        });\n        // Template Vertical Layout\n        $('.autoimex_reviewLink_vertical').on('click',() => {\n           \n            $('html, body').animate({\n                scrollTop: this.$reviewsContent2.offset().top - $('.header .autoimex_middleHeader').height(),\n            }, 700);\n            $('.vertical-tabs #tab-reviews .toggle-content').addClass('is-open');\n            $('.vertical-tabs #tab-reviews .toggleLink').addClass('is-open');\n            // var i = 2;\n            // $( \".tab\" ).each(function( index ) {\n             \n            // if( $( this ).text().search(\"Product Reviews\") != -1){\n            //     i = index + 1;\n            //   }\n            // });\n\n            // if (!$('.vertical-tabs .tabs li:nth-child('+i+')').hasClass('is-active')) {\n            //     $('.vertical-tabs .tabs li:nth-child('+i+') a').trigger('click');\n            //     $('.vertical-tabs #tab-faq .toggle-content').addClass('is-open');\n            //     $('.productView-description #tab-faq .toggleLink').addClass('is-open');\n            //     $('.productView-description #tab-description .toggle-content').removeClass('is-open');\n            //     $('.productView-description #tab-description .toggleLink ').removeClass('is-open');\n\n            // }\n\n            // $('.navPage-childList-item').each(function(index){\n            //     console.log( index + \": \" + $( this ).text() );\n            // });\n        });\n\n    }\n\n    collapseReviews() {\n        // We're in paginating state, do not collapse\n        if (window.location.hash && window.location.hash.indexOf('#product-reviews') === 0) {\n            $('html, body').animate({\n                scrollTop: this.$reviewsContent.offset().top - 56,\n            }, 700);\n            if (!$('.productView-description .tabs li:nth-child(2)').hasClass('is-active')) {\n                $('.productView-description .tabs li:nth-child(2) a').trigger('click');\n                $('.productView-description #tab-reviews .toggle-content').addClass('is-open');\n            }\n        }\n\n        // force collapse on page load\n        //this.$collapsible.trigger(CollapsibleEvents.click);\n    }\n\n    /**\n     * Inject ID into the pagination link\n     */\n    injectPaginationLink() {\n        const $nextLink = $('.pagination-item--next .pagination-link', this.$reviewsContent);\n        const $prevLink = $('.pagination-item--previous .pagination-link', this.$reviewsContent);\n\n        if ($nextLink.length) {\n            $nextLink.attr('href', `${$nextLink.attr('href')} #product-reviews`);\n        }\n\n        if ($prevLink.length) {\n            $prevLink.attr('href', `${$prevLink.attr('href')} #product-reviews`);\n        }\n    }\n\n    registerValidation(context) {\n        this.context = context;\n        this.validator.add([{\n            selector: '[name=\"revrating\"]',\n            validate: 'presence',\n            errorMessage: this.context.reviewRating,\n        }, {\n            selector: '[name=\"revtitle\"]',\n            validate: 'min-length:2',\n            errorMessage: this.context.reviewSubject,\n        }, {\n            selector: '[name=\"revtext\"]',\n            validate: 'min-length:2',\n            errorMessage: this.context.reviewComment,\n        }, {\n            selector: '[name=\"email\"]',\n            validate: (cb, val) => {\n                const result = forms.email(val);\n                cb(result);\n            },\n            errorMessage: this.context.reviewEmail,\n        }]);\n\n        return this.validator;\n    }\n\n    validate() {\n        return this.validator.performCheck();\n    }\n}\n","export class VideoGallery {\n    constructor($element) {\n        this.$player = $element.find('[data-video-player]');\n        this.$videos = $element.find('[data-video-item]');\n        this.currentVideo = {};\n        this.bindEvents();\n    }\n\n    selectNewVideo(e) {\n        e.preventDefault();\n\n        const $target = $(e.currentTarget);\n\n        this.currentVideo = {\n            id: $target.data('videoId'),\n            $selectedThumb: $target,\n        };\n\n        this.setMainVideo();\n        this.setActiveThumb();\n    }\n\n    setMainVideo() {\n        this.$player.attr('src', `//www.youtube.com/embed/${this.currentVideo.id}`);\n    }\n\n    setActiveThumb() {\n        this.$videos.removeClass('is-active');\n        this.currentVideo.$selectedThumb.addClass('is-active');\n    }\n\n    bindEvents() {\n        this.$videos.on('click', this.selectNewVideo.bind(this));\n    }\n}\n\nexport default function videoGallery() {\n    const pluginKey = 'video-gallery';\n    const $videoGallery = $(`[data-${pluginKey}]`);\n\n    $videoGallery.each((index, element) => {\n        const $el = $(element);\n        const isInitialized = $el.data(pluginKey) instanceof VideoGallery;\n\n        if (isInitialized) {\n            return;\n        }\n\n        $el.data(pluginKey, new VideoGallery($el));\n    });\n}\n","/*\n Import all product specific js\n */\nimport PageManager from './page-manager';\nimport Review from './product/reviews';\nimport collapsibleFactory from './common/collapsible';\nimport ProductDetails from './common/product-details';\nimport videoGallery from './product/video-gallery';\nimport { classifyForm } from './common/form-utils';\n\nexport default class Product extends PageManager {\n    constructor(context) {\n        super(context);\n        this.url = window.location.href;\n        this.$reviewLink = $('[data-reveal-id=\"modal-review-form\"]');\n    }\n\n    onReady() {\n        // Listen for foundation modal close events to sanitize URL after review.\n        $(document).on('close.fndtn.reveal', () => {\n            if (this.url.indexOf('#write_review') !== -1 && typeof window.history.replaceState === 'function') {\n                window.history.replaceState(null, document.title, window.location.pathname);\n            }\n        });\n\n        let validator;\n\n        // Init collapsible\n        collapsibleFactory();\n\n        this.productDetails = new ProductDetails($('.productView'), this.context, window.BCData.product_attributes);\n        this.productDetails.setProductVariant();\n\n        videoGallery();\n        \n        this.sidebar_mobile();\n        this.category_sidebar();\n        this.carouselLeftSidebar();\n\n        const $reviewForm = classifyForm('.writeReview-form');\n        const review = new Review($reviewForm);\n\n        $('body').on('click', '[data-reveal-id=\"modal-review-form\"]', () => {\n            validator = review.registerValidation(this.context);\n        });\n\n        $reviewForm.on('submit', () => {\n            if (validator) {\n                validator.performCheck();\n                return validator.areAll('valid');\n            }\n\n            return false;\n        });\n\n        this.productReviewHandler();\n    }\n\n    productReviewHandler() {\n        if (this.url.indexOf('#write_review') !== -1) {\n            this.$reviewLink.trigger('click');\n        }\n    }\n\n    category_sidebar() {\n        if ($('.all-categories-list').length > 0) {\n            $('.all-categories-list .icon-dropdown').on('click', function() {\n                var $this = $(this).parent();\n                $this.siblings().removeClass('is-clicked');\n                $this.toggleClass('is-clicked');\n                $this.siblings().find(\"> .dropdown-category-list\").slideUp( \"slow\" );\n                $this.find(\"> .dropdown-category-list\").slideToggle( \"slow\" );\n           });\n        }\n    }\n\n    sidebar_mobile() {\n        if ($('.page-sidebar').length > 0) {\n            $('.page-sidebar').clone().appendTo($(\"#sidebar-mobile .autoimex_MobileContent\"));\n\n            $('.autoimex_sidebar-mobile').on('click', function(e) {\n                $('body').addClass('autoimex_open-Sidebar');\n            });\n\n            $('#sidebar-mobile .autoimex_close').on('click', function(ev) {\n                $('body').removeClass('autoimex_open-Sidebar');\n            });\n\n            $('.bg-mobile').on('click', function(ev) {\n                if ($('body').hasClass('autoimex_open-Sidebar')) {\n                    $('body').removeClass('autoimex_open-Sidebar');\n                }\n            });\n        }\n    }\n\n    carouselLeftSidebar() {\n        $('.sidebarBlock .productCarousel').slick({\n            infinite: true,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            dots: false,\n            arrows: true,\n            autoplay: true,\n            autoplaySpeed: 2000,\n            mobileFirst: true,\n            nextArrow: '<svg class=\"slick-next slick-arrow\"><use xlink:href=\"#slick-arrow-next1\"></use></svg>',\n            prevArrow: '<svg class=\"slick-prev slick-arrow\"><use xlink:href=\"#slick-arrow-prev1\"></use></svg>',\n            responsive: [\n                {\n                    breakpoint: 1025,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1,\n                        dots: true,\n                        arrows: true\n                    }\n                }\n            ]\n        });\n    }\n}\n"],"names":["inputTagNames","classifyForm","formSelector","options","$form","$","$inputs","find","join","_options$formFieldCla","formFieldClass","each","__","input","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","_includes","_camelCase","_capitalize","addClass","classifyInput","insertStateHiddenField","$stateField","$field","fieldId","stateFieldAttrs","type","name","match","length","value","after","Validators","setEmailValidation","validator","field","add","selector","validate","cb","val","forms","email","errorMessage","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","data","Object","keys","nod","classes","forEach","hasClass","removeClass","test","password","this","notEmpty","_default","$reviewForm","submit","$reviewsContent","$collapsible","$reviewsContent2","initLinkBind","injectPaginationLink","collapseReviews","_proto","prototype","_this","on","event","preventDefault","window","width","animate","scrollTop","offset","top","height","i","index","text","search","trigger","location","hash","indexOf","$nextLink","$prevLink","attr","registerValidation","context","reviewRating","reviewSubject","reviewComment","reviewEmail","performCheck","VideoGallery","$element","$player","$videos","currentVideo","bindEvents","selectNewVideo","e","$target","currentTarget","id","$selectedThumb","setMainVideo","setActiveThumb","bind","Product","_PageManager","call","url","href","$reviewLink","onReady","pluginKey","_this2","document","history","replaceState","title","pathname","collapsibleFactory","productDetails","ProductDetails","BCData","product_attributes","setProductVariant","element","$el","sidebar_mobile","category_sidebar","carouselLeftSidebar","review","Review","areAll","productReviewHandler","$this","siblings","toggleClass","slideUp","slideToggle","clone","appendTo","ev","slick","infinite","slidesToShow","slidesToScroll","dots","arrows","autoplay","autoplaySpeed","mobileFirst","nextArrow","prevArrow","responsive","breakpoint","settings","PageManager"],"sourceRoot":""}