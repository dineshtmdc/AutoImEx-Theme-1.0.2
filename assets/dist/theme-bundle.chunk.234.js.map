{"version":3,"file":"theme-bundle.chunk.234.js","mappings":"kKA0BA,QA1Bc,CACVA,MAAK,SAACC,GAEF,MADW,aACDC,KAAKD,EACnB,EAOAE,SAAQ,SAACF,GACL,OAAOG,KAAKC,SAASJ,EACzB,EAQAI,SAAQ,SAACJ,GACL,OAAOA,EAAMK,OAAS,CAC1B,E,0OCrBsC,IAErBC,EAAS,SAAAC,G,QAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,K,EAAAF,G,EAAAD,G,sEAAA,IAAAI,EAAAJ,EAAAK,UA0CzB,OA1CyBD,EAC1BE,QAAA,WACIT,KAAKU,+BACT,EAACH,EAEDG,8BAAA,WACI,IAAMC,EAAe,0BACfC,GAAqBC,EAAAA,EAAAA,GAAI,CAC3BC,OAAWH,EAAY,0BAErBI,EAAeC,EAAEL,GAEvBC,EAAmBK,IAAI,CACnB,CACIC,SAAaP,EAAY,+BACzBQ,SAAU,SAACC,EAAIC,GAGXD,EAFeE,EAAAA,EAAM1B,MAAMyB,GAG/B,EACAE,aAAcvB,KAAKwB,QAAQC,cAE/B,CACIP,SAAaP,EAAY,qCACzBQ,SAAU,SAACC,EAAIC,GAGXD,EAFeE,EAAAA,EAAMrB,SAASoB,GAGlC,EACAE,aAAcvB,KAAKwB,QAAQE,mBAInCX,EAAaY,GAAG,UAAU,SAAAC,GACtBhB,EAAmBiB,eAEfjB,EAAmBkB,OAAO,UAI9BF,EAAMG,gBACV,GACJ,EAAC5B,CAAA,CA1CyB,CAAS6B,EAAAA,E","sources":["webpack://bigcommerce-cornerstone/./assets/js/theme/common/models/forms.js","webpack://bigcommerce-cornerstone/./assets/js/theme/contact-us.js"],"sourcesContent":["const forms = {\n    email(value) {\n        const re = /^.+@.+\\..+/;\n        return re.test(value);\n    },\n\n    /**\n     * Validates a password field\n     * @param value\n     * @returns {boolean}\n     */\n    password(value) {\n        return this.notEmpty(value);\n    },\n\n    /**\n     * validates if a field is empty\n     * @param value\n     * @returns {boolean}\n     *\n     */\n    notEmpty(value) {\n        return value.length > 0;\n    },\n};\n\nexport default forms;\n","import PageManager from './page-manager';\nimport nod from './common/nod';\nimport forms from './common/models/forms';\n\nexport default class ContactUs extends PageManager {\n    onReady() {\n        this.registerContactFormValidation();\n    }\n\n    registerContactFormValidation() {\n        const formSelector = 'form[data-contact-form]';\n        const contactUsValidator = nod({\n            submit: `${formSelector} input[type=\"submit\"]`,\n        });\n        const $contactForm = $(formSelector);\n\n        contactUsValidator.add([\n            {\n                selector: `${formSelector} input[name=\"contact_email\"]`,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.contactEmail,\n            },\n            {\n                selector: `${formSelector} textarea[name=\"contact_question\"]`,\n                validate: (cb, val) => {\n                    const result = forms.notEmpty(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.contactQuestion,\n            },\n        ]);\n\n        $contactForm.on('submit', event => {\n            contactUsValidator.performCheck();\n\n            if (contactUsValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n}\n"],"names":["email","value","test","password","this","notEmpty","length","ContactUs","_PageManager","apply","arguments","_proto","prototype","onReady","registerContactFormValidation","formSelector","contactUsValidator","nod","submit","$contactForm","$","add","selector","validate","cb","val","forms","errorMessage","context","contactEmail","contactQuestion","on","event","performCheck","areAll","preventDefault","PageManager"],"sourceRoot":""}